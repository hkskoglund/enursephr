#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.1433
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CCC.BusinessLayer
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[System.Data.Linq.Mapping.DatabaseAttribute(Name="CCC")]
	public partial class CCCDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertCare_component(Care_component instance);
    partial void UpdateCare_component(Care_component instance);
    partial void DeleteCare_component(Care_component instance);
    partial void InsertCarePattern(CarePattern instance);
    partial void UpdateCarePattern(CarePattern instance);
    partial void DeleteCarePattern(CarePattern instance);
    partial void InsertNursing_Diagnosi(Nursing_Diagnosi instance);
    partial void UpdateNursing_Diagnosi(Nursing_Diagnosi instance);
    partial void DeleteNursing_Diagnosi(Nursing_Diagnosi instance);
    partial void InsertNursing_Intervention(Nursing_Intervention instance);
    partial void UpdateNursing_Intervention(Nursing_Intervention instance);
    partial void DeleteNursing_Intervention(Nursing_Intervention instance);
    #endregion
		
		public CCCDataContext() : 
				base(global::CCC.BusinessLayer.Properties.Settings.Default.CCCConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public CCCDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public CCCDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public CCCDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public CCCDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Care_component> Care_components
		{
			get
			{
				return this.GetTable<Care_component>();
			}
		}
		
		public System.Data.Linq.Table<CarePattern> CarePatterns
		{
			get
			{
				return this.GetTable<CarePattern>();
			}
		}
		
		public System.Data.Linq.Table<Copyright> Copyrights
		{
			get
			{
				return this.GetTable<Copyright>();
			}
		}
		
		public System.Data.Linq.Table<ExpectedOutcome> ExpectedOutcomes
		{
			get
			{
				return this.GetTable<ExpectedOutcome>();
			}
		}
		
		public System.Data.Linq.Table<Nursing_Diagnosi> Nursing_Diagnosis
		{
			get
			{
				return this.GetTable<Nursing_Diagnosi>();
			}
		}
		
		public System.Data.Linq.Table<Nursing_Intervention> Nursing_Interventions
		{
			get
			{
				return this.GetTable<Nursing_Intervention>();
			}
		}
	}
	
	[Table(Name="dbo.[Care component]")]
	public partial class Care_component : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private char _Code;
		
		private string _Pattern;
		
		private string _Component;
		
		private string _Definition;
		
		private EntitySet<Nursing_Diagnosi> _Nursing_Diagnosis;
		
		private EntitySet<Nursing_Intervention> _Nursing_Interventions;
		
		private EntityRef<CarePattern> _CarePattern;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodeChanging(char value);
    partial void OnCodeChanged();
    partial void OnPatternChanging(string value);
    partial void OnPatternChanged();
    partial void OnComponentChanging(string value);
    partial void OnComponentChanged();
    partial void OnDefinitionChanging(string value);
    partial void OnDefinitionChanged();
    #endregion
		
		public Care_component()
		{
			this._Nursing_Diagnosis = new EntitySet<Nursing_Diagnosi>(new Action<Nursing_Diagnosi>(this.attach_Nursing_Diagnosis), new Action<Nursing_Diagnosi>(this.detach_Nursing_Diagnosis));
			this._Nursing_Interventions = new EntitySet<Nursing_Intervention>(new Action<Nursing_Intervention>(this.attach_Nursing_Interventions), new Action<Nursing_Intervention>(this.detach_Nursing_Interventions));
			this._CarePattern = default(EntityRef<CarePattern>);
			OnCreated();
		}
		
		[Column(Storage="_Code", DbType="NChar(1) NOT NULL", IsPrimaryKey=true)]
		public char Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[Column(Storage="_Pattern", DbType="NVarChar(50)")]
		public string Pattern
		{
			get
			{
				return this._Pattern;
			}
			set
			{
				if ((this._Pattern != value))
				{
					if (this._CarePattern.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPatternChanging(value);
					this.SendPropertyChanging();
					this._Pattern = value;
					this.SendPropertyChanged("Pattern");
					this.OnPatternChanged();
				}
			}
		}
		
		[Column(Storage="_Component", DbType="NVarChar(50)")]
		public string Component
		{
			get
			{
				return this._Component;
			}
			set
			{
				if ((this._Component != value))
				{
					this.OnComponentChanging(value);
					this.SendPropertyChanging();
					this._Component = value;
					this.SendPropertyChanged("Component");
					this.OnComponentChanged();
				}
			}
		}
		
		[Column(Storage="_Definition", DbType="NVarChar(255)")]
		public string Definition
		{
			get
			{
				return this._Definition;
			}
			set
			{
				if ((this._Definition != value))
				{
					this.OnDefinitionChanging(value);
					this.SendPropertyChanging();
					this._Definition = value;
					this.SendPropertyChanged("Definition");
					this.OnDefinitionChanged();
				}
			}
		}
		
		[Association(Name="Care_component_Nursing_Diagnosi", Storage="_Nursing_Diagnosis", OtherKey="ComponentCode")]
		public EntitySet<Nursing_Diagnosi> Nursing_Diagnosis
		{
			get
			{
				return this._Nursing_Diagnosis;
			}
			set
			{
				this._Nursing_Diagnosis.Assign(value);
			}
		}
		
		[Association(Name="Care_component_Nursing_Intervention", Storage="_Nursing_Interventions", OtherKey="ComponentCode")]
		public EntitySet<Nursing_Intervention> Nursing_Interventions
		{
			get
			{
				return this._Nursing_Interventions;
			}
			set
			{
				this._Nursing_Interventions.Assign(value);
			}
		}
		
		[Association(Name="CarePattern_Care_component", Storage="_CarePattern", ThisKey="Pattern", IsForeignKey=true)]
		public CarePattern CarePattern
		{
			get
			{
				return this._CarePattern.Entity;
			}
			set
			{
				CarePattern previousValue = this._CarePattern.Entity;
				if (((previousValue != value) 
							|| (this._CarePattern.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CarePattern.Entity = null;
						previousValue.Care_components.Remove(this);
					}
					this._CarePattern.Entity = value;
					if ((value != null))
					{
						value.Care_components.Add(this);
						this._Pattern = value.Pattern;
					}
					else
					{
						this._Pattern = default(string);
					}
					this.SendPropertyChanged("CarePattern");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Nursing_Diagnosis(Nursing_Diagnosi entity)
		{
			this.SendPropertyChanging();
			entity.Care_component = this;
		}
		
		private void detach_Nursing_Diagnosis(Nursing_Diagnosi entity)
		{
			this.SendPropertyChanging();
			entity.Care_component = null;
		}
		
		private void attach_Nursing_Interventions(Nursing_Intervention entity)
		{
			this.SendPropertyChanging();
			entity.Care_component = this;
		}
		
		private void detach_Nursing_Interventions(Nursing_Intervention entity)
		{
			this.SendPropertyChanging();
			entity.Care_component = null;
		}
	}
	
	[Table(Name="dbo.CarePattern")]
	public partial class CarePattern : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Pattern;
		
		private string _Definition;
		
		private EntitySet<Care_component> _Care_components;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPatternChanging(string value);
    partial void OnPatternChanged();
    partial void OnDefinitionChanging(string value);
    partial void OnDefinitionChanged();
    #endregion
		
		public CarePattern()
		{
			this._Care_components = new EntitySet<Care_component>(new Action<Care_component>(this.attach_Care_components), new Action<Care_component>(this.detach_Care_components));
			OnCreated();
		}
		
		[Column(Storage="_Pattern", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Pattern
		{
			get
			{
				return this._Pattern;
			}
			set
			{
				if ((this._Pattern != value))
				{
					this.OnPatternChanging(value);
					this.SendPropertyChanging();
					this._Pattern = value;
					this.SendPropertyChanged("Pattern");
					this.OnPatternChanged();
				}
			}
		}
		
		[Column(Storage="_Definition", DbType="NChar(255)")]
		public string Definition
		{
			get
			{
				return this._Definition;
			}
			set
			{
				if ((this._Definition != value))
				{
					this.OnDefinitionChanging(value);
					this.SendPropertyChanging();
					this._Definition = value;
					this.SendPropertyChanged("Definition");
					this.OnDefinitionChanged();
				}
			}
		}
		
		[Association(Name="CarePattern_Care_component", Storage="_Care_components", OtherKey="Pattern")]
		public EntitySet<Care_component> Care_components
		{
			get
			{
				return this._Care_components;
			}
			set
			{
				this._Care_components.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Care_components(Care_component entity)
		{
			this.SendPropertyChanging();
			entity.CarePattern = this;
		}
		
		private void detach_Care_components(Care_component entity)
		{
			this.SendPropertyChanging();
			entity.CarePattern = null;
		}
	}
	
	[Table(Name="dbo.Copyright")]
	public partial class Copyright
	{
		
		private string _Name;
		
		private string _Version;
		
		private string _Author;
		
		private string _TranslatedName;
		
		private string _TransaltedVersion;
		
		private string _Translators;
		
		private string _Language;
		
		private string _LanguageCode;
		
		public Copyright()
		{
		}
		
		[Column(Storage="_Name", DbType="NChar(70)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[Column(Storage="_Version", DbType="NChar(10)")]
		public string Version
		{
			get
			{
				return this._Version;
			}
			set
			{
				if ((this._Version != value))
				{
					this._Version = value;
				}
			}
		}
		
		[Column(Storage="_Author", DbType="NChar(70)")]
		public string Author
		{
			get
			{
				return this._Author;
			}
			set
			{
				if ((this._Author != value))
				{
					this._Author = value;
				}
			}
		}
		
		[Column(Storage="_TranslatedName", DbType="NChar(70)")]
		public string TranslatedName
		{
			get
			{
				return this._TranslatedName;
			}
			set
			{
				if ((this._TranslatedName != value))
				{
					this._TranslatedName = value;
				}
			}
		}
		
		[Column(Storage="_TransaltedVersion", DbType="NChar(70)")]
		public string TransaltedVersion
		{
			get
			{
				return this._TransaltedVersion;
			}
			set
			{
				if ((this._TransaltedVersion != value))
				{
					this._TransaltedVersion = value;
				}
			}
		}
		
		[Column(Storage="_Translators", DbType="NChar(140)")]
		public string Translators
		{
			get
			{
				return this._Translators;
			}
			set
			{
				if ((this._Translators != value))
				{
					this._Translators = value;
				}
			}
		}
		
		[Column(Storage="_Language", DbType="NChar(20)")]
		public string Language
		{
			get
			{
				return this._Language;
			}
			set
			{
				if ((this._Language != value))
				{
					this._Language = value;
				}
			}
		}
		
		[Column(Storage="_LanguageCode", DbType="NChar(10)")]
		public string LanguageCode
		{
			get
			{
				return this._LanguageCode;
			}
			set
			{
				if ((this._LanguageCode != value))
				{
					this._LanguageCode = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.ExpectedOutcome")]
	public partial class ExpectedOutcome
	{
		
		private System.Nullable<short> _Code;
		
		private string _Outcome;
		
		private string _Definition;
		
		public ExpectedOutcome()
		{
		}
		
		[Column(Storage="_Code", DbType="SmallInt")]
		public System.Nullable<short> Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this._Code = value;
				}
			}
		}
		
		[Column(Storage="_Outcome", DbType="NVarChar(30)")]
		public string Outcome
		{
			get
			{
				return this._Outcome;
			}
			set
			{
				if ((this._Outcome != value))
				{
					this._Outcome = value;
				}
			}
		}
		
		[Column(Storage="_Definition", DbType="NVarChar(100)")]
		public string Definition
		{
			get
			{
				return this._Definition;
			}
			set
			{
				if ((this._Definition != value))
				{
					this._Definition = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.[Nursing Diagnosis]")]
	public partial class Nursing_Diagnosi : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DiagnosisID;
		
		private char _ComponentCode;
		
		private decimal _MajorCode;
		
		private System.Nullable<short> _MinorCode;
		
		private string _Concept;
		
		private string _Definition;
		
		private EntityRef<Care_component> _Care_component;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDiagnosisIDChanging(int value);
    partial void OnDiagnosisIDChanged();
    partial void OnComponentCodeChanging(char value);
    partial void OnComponentCodeChanged();
    partial void OnMajorCodeChanging(decimal value);
    partial void OnMajorCodeChanged();
    partial void OnMinorCodeChanging(System.Nullable<short> value);
    partial void OnMinorCodeChanged();
    partial void OnConceptChanging(string value);
    partial void OnConceptChanged();
    partial void OnDefinitionChanging(string value);
    partial void OnDefinitionChanged();
    #endregion
		
		public Nursing_Diagnosi()
		{
			this._Care_component = default(EntityRef<Care_component>);
			OnCreated();
		}
		
		[Column(Storage="_DiagnosisID", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int DiagnosisID
		{
			get
			{
				return this._DiagnosisID;
			}
			set
			{
				if ((this._DiagnosisID != value))
				{
					this.OnDiagnosisIDChanging(value);
					this.SendPropertyChanging();
					this._DiagnosisID = value;
					this.SendPropertyChanged("DiagnosisID");
					this.OnDiagnosisIDChanged();
				}
			}
		}
		
		[Column(Storage="_ComponentCode", DbType="NChar(1) NOT NULL", IsPrimaryKey=true)]
		public char ComponentCode
		{
			get
			{
				return this._ComponentCode;
			}
			set
			{
				if ((this._ComponentCode != value))
				{
					if (this._Care_component.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnComponentCodeChanging(value);
					this.SendPropertyChanging();
					this._ComponentCode = value;
					this.SendPropertyChanged("ComponentCode");
					this.OnComponentCodeChanged();
				}
			}
		}
		
		[Column(Storage="_MajorCode", DbType="Decimal(2,0) NOT NULL", IsPrimaryKey=true)]
		public decimal MajorCode
		{
			get
			{
				return this._MajorCode;
			}
			set
			{
				if ((this._MajorCode != value))
				{
					this.OnMajorCodeChanging(value);
					this.SendPropertyChanging();
					this._MajorCode = value;
					this.SendPropertyChanged("MajorCode");
					this.OnMajorCodeChanged();
				}
			}
		}
		
		[Column(Storage="_MinorCode", DbType="SmallInt")]
		public System.Nullable<short> MinorCode
		{
			get
			{
				return this._MinorCode;
			}
			set
			{
				if ((this._MinorCode != value))
				{
					this.OnMinorCodeChanging(value);
					this.SendPropertyChanging();
					this._MinorCode = value;
					this.SendPropertyChanged("MinorCode");
					this.OnMinorCodeChanged();
				}
			}
		}
		
		[Column(Storage="_Concept", DbType="NVarChar(80) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Concept
		{
			get
			{
				return this._Concept;
			}
			set
			{
				if ((this._Concept != value))
				{
					this.OnConceptChanging(value);
					this.SendPropertyChanging();
					this._Concept = value;
					this.SendPropertyChanged("Concept");
					this.OnConceptChanged();
				}
			}
		}
		
		[Column(Storage="_Definition", DbType="NVarChar(255)")]
		public string Definition
		{
			get
			{
				return this._Definition;
			}
			set
			{
				if ((this._Definition != value))
				{
					this.OnDefinitionChanging(value);
					this.SendPropertyChanging();
					this._Definition = value;
					this.SendPropertyChanged("Definition");
					this.OnDefinitionChanged();
				}
			}
		}
		
		[Association(Name="Care_component_Nursing_Diagnosi", Storage="_Care_component", ThisKey="ComponentCode", IsForeignKey=true)]
		public Care_component Care_component
		{
			get
			{
				return this._Care_component.Entity;
			}
			set
			{
				Care_component previousValue = this._Care_component.Entity;
				if (((previousValue != value) 
							|| (this._Care_component.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Care_component.Entity = null;
						previousValue.Nursing_Diagnosis.Remove(this);
					}
					this._Care_component.Entity = value;
					if ((value != null))
					{
						value.Nursing_Diagnosis.Add(this);
						this._ComponentCode = value.Code;
					}
					else
					{
						this._ComponentCode = default(char);
					}
					this.SendPropertyChanged("Care_component");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.[Nursing Intervention]")]
	public partial class Nursing_Intervention : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private char _ComponentCode;
		
		private decimal _MajorCode;
		
		private System.Nullable<short> _MinorCode;
		
		private string _Concept;
		
		private string _Definition;
		
		private EntityRef<Care_component> _Care_component;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnComponentCodeChanging(char value);
    partial void OnComponentCodeChanged();
    partial void OnMajorCodeChanging(decimal value);
    partial void OnMajorCodeChanged();
    partial void OnMinorCodeChanging(System.Nullable<short> value);
    partial void OnMinorCodeChanged();
    partial void OnConceptChanging(string value);
    partial void OnConceptChanged();
    partial void OnDefinitionChanging(string value);
    partial void OnDefinitionChanged();
    #endregion
		
		public Nursing_Intervention()
		{
			this._Care_component = default(EntityRef<Care_component>);
			OnCreated();
		}
		
		[Column(Storage="_ComponentCode", DbType="NChar(1) NOT NULL", IsPrimaryKey=true)]
		public char ComponentCode
		{
			get
			{
				return this._ComponentCode;
			}
			set
			{
				if ((this._ComponentCode != value))
				{
					if (this._Care_component.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnComponentCodeChanging(value);
					this.SendPropertyChanging();
					this._ComponentCode = value;
					this.SendPropertyChanged("ComponentCode");
					this.OnComponentCodeChanged();
				}
			}
		}
		
		[Column(Storage="_MajorCode", DbType="Decimal(2,0) NOT NULL", IsPrimaryKey=true)]
		public decimal MajorCode
		{
			get
			{
				return this._MajorCode;
			}
			set
			{
				if ((this._MajorCode != value))
				{
					this.OnMajorCodeChanging(value);
					this.SendPropertyChanging();
					this._MajorCode = value;
					this.SendPropertyChanged("MajorCode");
					this.OnMajorCodeChanged();
				}
			}
		}
		
		[Column(Storage="_MinorCode", DbType="SmallInt")]
		public System.Nullable<short> MinorCode
		{
			get
			{
				return this._MinorCode;
			}
			set
			{
				if ((this._MinorCode != value))
				{
					this.OnMinorCodeChanging(value);
					this.SendPropertyChanging();
					this._MinorCode = value;
					this.SendPropertyChanged("MinorCode");
					this.OnMinorCodeChanged();
				}
			}
		}
		
		[Column(Storage="_Concept", DbType="NVarChar(80) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Concept
		{
			get
			{
				return this._Concept;
			}
			set
			{
				if ((this._Concept != value))
				{
					this.OnConceptChanging(value);
					this.SendPropertyChanging();
					this._Concept = value;
					this.SendPropertyChanged("Concept");
					this.OnConceptChanged();
				}
			}
		}
		
		[Column(Storage="_Definition", DbType="NVarChar(255)")]
		public string Definition
		{
			get
			{
				return this._Definition;
			}
			set
			{
				if ((this._Definition != value))
				{
					this.OnDefinitionChanging(value);
					this.SendPropertyChanging();
					this._Definition = value;
					this.SendPropertyChanged("Definition");
					this.OnDefinitionChanged();
				}
			}
		}
		
		[Association(Name="Care_component_Nursing_Intervention", Storage="_Care_component", ThisKey="ComponentCode", IsForeignKey=true)]
		public Care_component Care_component
		{
			get
			{
				return this._Care_component.Entity;
			}
			set
			{
				Care_component previousValue = this._Care_component.Entity;
				if (((previousValue != value) 
							|| (this._Care_component.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Care_component.Entity = null;
						previousValue.Nursing_Interventions.Remove(this);
					}
					this._Care_component.Entity = value;
					if ((value != null))
					{
						value.Nursing_Interventions.Add(this);
						this._ComponentCode = value.Code;
					}
					else
					{
						this._ComponentCode = default(char);
					}
					this.SendPropertyChanged("Care_component");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
